[{"authors":null,"categories":null,"content":"Парфенова Елизавета Евгеньевна, 18 лет. Студентка Российского Университета Дружбы Народов, направление “Фундаментальная информатика и информационные технологии”. Наравне с техническими науками увлекаюсь искусством (кино и литература в большей степени).\n","date":1654167044,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1654167044,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Парфенова Елизавета Евгеньевна, 18 лет. Студентка Российского Университета Дружбы Народов, направление “Фундаментальная информатика и информационные технологии”. Наравне с техническими науками увлекаюсь искусством (кино и литература в большей степени).","tags":null,"title":"Парфенова Елизавета","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://parfenovaee.github.io/ru/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Введение\nВ сфере IT огромное количество направлений: от создания игр и приложений до разработки роботов, которые полностью заменяют труд человека. Не существует языка программирования, который бы одинаково быстро решал задачи для любого из этих направлений. Поэтому важно понимать, что любые списки лучших языков программирования субъективны и обычно основаны на том, насколько язык популярен, универсален и комфортен в работе.\nСодержание\n Что такое языки программирования? Где применяются языки программирования? Топ 5 языков программирования в настоящее время.  Что такое языки программирования?\nЯзык программирования — это набор формальных правил, по которым пишут программы. Обычный язык нужен для общения людей, а язык программирования — для общения с компьютером. Как и в любом естественном языке, тут есть лексика — слова, функции и операторы, из которых по правилам синтаксиса составляются выражения. Они имеют чёткий, вполне определённый смысл, понятный компьютеру, — семантику.\nГде применяются языки программирования?\nСферы применения языков программирования очень разняться. Они зависят от направления, в котором пользователь хочет его применять. Для каждого направления существуют «свои» языки программирования. В целом, языки программирования применяются в веб-программировании, разработке игр, андроид разработках, разработке Операционных систем, разработке программного обеспечения, нейронных сетей и анализе данных.\nТоп 5 языков программирования в настоящее время\n1. Язык JavaScript\n Не путайте его с Java — это разные и совершенно не похожие языки. JavaScript применяют для создания графики, мобильных и веб-приложений, в браузерных операционных системах. Он очень универсален и довольно легок в изучении.  2. Язык Python\n Python легок в изучении и очень часто используется при обучении детей программированию — например, в онлайн-школе Skysmart. Программы на Python близки к естественному языку, поэтому он отлично подходит как первый язык для начинающего программиста. Это очень распространенный язык, на нем реализовано большое количество проектов. Python активно используют в Google, на нем написана большая часть исходного кода YouTube. Также часто применяется при создании машин-роботов. Сильные стороны Python — модульность и возможность интеграции с другими языками, а среди недостатков — низкая скорость работы и большое потребление памяти.  3. Язык Java\n Язык программирования общего назначения, который стабильно занимает высокие места в рейтингах популярности. Приложения на Java могут работать на любом компьютере, для этого создана виртуальная Java-машина. На Java активно разрабатывают мобильные приложения под операционную систему Android. На Java написаны такие успешные проекты, как RuneScape, Yahoo, Amazon, eBay, LinkedIn. Недостатки Java — медленная работа программ и большое потребление оперативной памяти.  4. Язык C#\n Название языка читается как «си шарп». Его разрабатывали в 1998–2001 годах внутри компании Microsoft для создания приложений. C# принадлежит к семье языков с C-подобным синтаксисом, из них он наиболее близок к C++ и Java. Поэтому у C# достаточно сложный синтаксис, что считается недостатком. По сравнению с С и С++, С# обладает безопасным кодом. С# работает в десятки раз медленнее, чем С.  5. Язык РНР\n Широко применяется для создания веб-приложений, лидирует по применению для создания динамических сайтов. PHP прошел быструю эволюцию и стал востребован среди программистов. Однако программисты его часто критикуют за несогласованный синтаксис.  Заключение\nТаким образом, языки программирования очень разнообразны и существуют до тех пор, пока цели, для которых они применяются, актуальны. В настоящее время существуют тысячи языков программирования, применяемых для своих целей, на которых работают большое количество людей.\n","date":1654167044,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1654167044,"objectID":"69f0081ed3b04a7a048613ad31bbd104","permalink":"https://parfenovaee.github.io/ru/post/language/","publishdate":"2022-06-02T13:50:44+03:00","relpermalink":"/ru/post/language/","section":"post","summary":"Введение\nВ сфере IT огромное количество направлений: от создания игр и приложений до разработки роботов, которые полностью заменяют труд человека. Не существует языка программирования, который бы одинаково быстро решал задачи для любого из этих направлений.","tags":["Academic","开源"],"title":"Языки программирования","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Подошла к концу очередная неделя. Наконец настало лето. На этой неделе я доделала последние Лабораторные по Операционным система. Это Лабораторные работы №13 и №14. Также я сделала выполнила достаточно сложные для меня задачи на языке Python. Поговорим об этом немного подробнее.\nЛабораторная работа №13\nЦелью Лабораторной работы было приобрести простейшие навыки разработки, анализа, тестирования и отладки приложений в ОС типа UNIX/Linux на примере создания на языке программирования С калькулятора с простейшими функциями.\nВ ходе этой работы я создала простейший калькулятор и работала с ним с помощью отладчика gdb. Это было достаточно интересно и познавательно и прокачало мои навыки работы с консолью.\nЛабораторная работа №14\nЦелью данной Лабораторной работы было приобретение практических навыков работы с именованными каналами.\nВ ходе работы мы научились запускать сервера. Не могу сказать, что эта работа была легкой, однако основная сложность была не в запуске каналов, а в предварительном написании файлов. Но внимательно изучив теорию, я справилась.\nНа языке Python на этой неделе я научилась строить диаграммы и гистограммы, что вызвало небольшие сложности. Также я написала программу для считывания строк из файла и преобразования их в словарь. Это задание для меня показалось самым сложным.\nВывод\nТаким образом, прошедшая неделя была достаточно продуктивной и научила меня многим новым вещам в программировании.\n","date":1654167034,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1654167034,"objectID":"441d48a06f907202c1c08bc9de6d3df4","permalink":"https://parfenovaee.github.io/ru/post/weeks/","publishdate":"2022-06-02T13:50:34+03:00","relpermalink":"/ru/post/weeks/","section":"post","summary":"Подошла к концу очередная неделя. Наконец настало лето. На этой неделе я доделала последние Лабораторные по Операционным система. Это Лабораторные работы №13 и №14. Также я сделала выполнила достаточно сложные для меня задачи на языке Python.","tags":["Academic","开源"],"title":"Моя 5 неделя","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Введение\nВ этой статье мы поговорим о научном программировании и о том, какие языке лучше использовать для работы в науке.\nСодержание\n Что такое научное программирование? Где применяется научное программирование Языки научного программирования  R Python Julia    Что такое научное программирование?\nНаучное программирование — высокоориентированный стиль программирования для научных расчетов. От других видов программирования его отличают предельные корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, а также преобладание эффективности над универсальностью.\nГде применяется научное программирование? Научное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без специалистов в области научного программирования, способных предоставить ученым надежный и точный инструмент для совершения открытий.\nРяд отраслей науки непосредственно зависят от уровня развития научного программирования. Так, своего исполнения ждут беспилотный транспорт, «умные» системы управления городским и сельским хозяйством, фондовыми биржами; ждут робототехника, генная инженерия, искусственный интеллект, превосходящий возможности человека.\nЯзыки научного программирования\nВ различных областях могут применяться разные существующие языки программирования, но в этой статье я хочу поговорить о трех.\n1. R\nR, который является прямым потомком старшего языка программирования S, был выпущен в далеком 1995 году и с тех пор становится все совершеннее. Написанный на таких языках как C и Fortran данный проект сегодня поддерживается Фондом языка R для статистических вычислений (R Foundation for Statistical Computing). Отличный набор высококачественных предметно-ориентированных пакетов с открытым исходным кодом. R имеет в своем распоряжении пакеты практически для любого количественного и статистического применения, которое можно только себе представить. Сюда входят нейронные сети, нелинейная регрессия, филогенетика, построение сложных диаграмм, графиков и многое-многое другое. Вместе с базовой установкой в довесок нам предоставляется возможность установки обширных встроенных функций и методов. Кроме того, R прекрасно обрабатывает данные матричной алгебры.R – мощный язык, который отличается наличием огромного выбора приложений для сбора статистических данных и визуализации данных, а тот факт, что он является ЯП с открытым исходным кодом, позволяет ему собрать большое количество поклонников среди разработчиков. Именно благодаря своей эффективности для первоначальных целей этому языку программирования удалось достичь широкой популярности.\n2. Python\nPython один из самых популярных языков программирования на данный момент. Он имеет простой синтаксис и множество разнообразных библиотек и фреймворков, которые помогут в достижении нужной задачи.\nPython является хорошим вариантом для целей науки о данных (data science), и это утверждение справедливо как для начального, так и для продвинутого уровней работы в данной области. Большая часть науки о данных сосредоточена вокруг процесса ETL (извлечение-преобразование-загрузка). Эта особенность делает Python идеально подходящим для таких целей языком программирования.\n3. Julia\nВыпущенный чуть более 5 лет назад, Julia произвела впечатление на мир вычислительных методов. Язык добился такой популярности благодаря тому, что несколько крупных организаций, включая некоторые в финансовой отрасли, почти сразу начали использовать его для своих целей. Julia – это скомпилированный язык JIT («точно в срок»), благодаря которому удается достичь хорошей производительности. Этот язык является достаточно простым, он предусматривает возможности динамической типизации и сценариев интерпретируемого языка, такого как Python. Julia был предназначен для проведения численного анализа, он также может рассматриваться в качестве языка программирования общего назначения. Конечно, этот язык имеет свои недостатки, основным из которых является его молодость. У этого языка пока недостаточно пакетов программ, однако через несколько лет он сможет потягаться со своими основными конкурентами.\nЗаключение\nНаучное программирование и языки, на которых с ним можно работать, приобретают небывалую популярность из-за прогресса, который идет в нашем обществе. Оно позволяет ученым развивать технологии и превращать наш мир в “мир будущего”.\n","date":1653331945,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653331945,"objectID":"505f1926928104c1ffdf04557ad3e744","permalink":"https://parfenovaee.github.io/ru/post/programming/","publishdate":"2022-05-23T21:52:25+03:00","relpermalink":"/ru/post/programming/","section":"post","summary":"Введение\nВ этой статье мы поговорим о научном программировании и о том, какие языке лучше использовать для работы в науке.\nСодержание\n Что такое научное программирование? Где применяется научное программирование Языки научного программирования  R Python Julia    Что такое научное программирование?","tags":["Academic","开源"],"title":"Языки научного программирования","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Моя неделя была насыщенной и продуктивной. Я сделала несколько Лабораторных работ (в этот раз их было больше, чем обычно), две из которых были по Операционным системам. Это были Лабораторные работы №11 и №12. Немного поговорим о них.\n(Лабораторная работа №11*\nЦелью работы было:\n  Изучить основы программирования в оболочке ОС UNIX.\n  Научится писать более сложные командные файлы с использованием логических управляющих конструкций и циклов.\n  Эта лабораторная работа была достаточно сложной, поэтому потребовала много времени на выполнение. В ходе нее я написала 4 командных файла, предназначенных для выполнения разных задач.\nЛабораторная работа №12\nЦелью работы было:\n  Изучить основы программирования в оболочке ОС UNIX.\n  Научиться писать более сложные командные файлы с использованием логических управляющих конструкций и циклов.\n  В этой Лабораторной работе я написала три командных файла, один из которых реализовал команду man. Также в ходе работы я научилась использовать встроенную переменную RANDOM.\nОчень интересной оказалась Лабораторная работа по математическому моделированию, где мы программируем на Python. Я потратила на нее достаточно много времени, однако все-таки выполнила ее, исправляя ошибки, появлявшиеся по ходу. В ходе работы я изучила достаточно много новых функций и методов, а также узнала новые подходы к решению задач.\nВывод\nТаким образом, за прошедшую неделю я улучшила свои навыки программирования в командной оболочке, а также намного лучше изучила синтаксис Python.\n","date":1653331932,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653331932,"objectID":"39a351791719f471f59d283bbb99da7d","permalink":"https://parfenovaee.github.io/ru/post/week4/","publishdate":"2022-05-23T21:52:12+03:00","relpermalink":"/ru/post/week4/","section":"post","summary":"Моя неделя была насыщенной и продуктивной. Я сделала несколько Лабораторных работ (в этот раз их было больше, чем обычно), две из которых были по Операционным системам. Это были Лабораторные работы №11 и №12.","tags":["Academic","开源"],"title":"Моя 4 неделя","type":"post"},{"authors":null,"categories":null,"content":"Все проекты на C++.\n","date":1653264000,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653264000,"objectID":"6325264ec167b5e7eda43f15c7a469c7","permalink":"https://parfenovaee.github.io/ru/project/progect-c++/","publishdate":"2022-05-23T00:00:00Z","relpermalink":"/ru/project/progect-c++/","section":"project","summary":"Список проектов на C++.","tags":["C"],"title":"Проекты на C++","type":"project"},{"authors":null,"categories":null,"content":"Все проекты на Python.\n","date":1653264000,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653264000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://parfenovaee.github.io/ru/project/example/","publishdate":"2022-05-23T00:00:00Z","relpermalink":"/ru/project/example/","section":"project","summary":"Список проектов на Python.","tags":["Python"],"title":"Проекты на Python","type":"project"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Прошедшая неделя была продуктивной. Я снова сделала несколько лабораторных работ, две из которых стабильно были по Операционным системам. Это были Лабораторные работы №9 и №10. Немного расскажу о них.\nЛабораторная работа №9\nЦелью Лабораторной работы было:\n Познакомиться с операционной системой Linux Получить практические навыки работы с редактором Emacs  В этой Лабораторной работе я познакомилась с достаточно сложным, но интересным редактором Emacs. Научилась работать с окнами и буферами, а также редактировать текст с помощью горячих клавиш. Этот редактор понравился мне больше, чем тот, с которым я знакомилась ранее, из-за разнообразия своего функционала.\nЛабораторная работа №10\nЦелью Лабораторной работы было:\n Изучить основы программирования в оболочке ОС UNIX/Linux. Научиться писать небольшие командные файлы.  Эта Лабораторная работа первая в курсе, где мы начали программировать. Она познакомила меня с командной оболочкой. Благодаря ней я научилась писать небольшие скрипты, которые облегчают пользователю работу с операционной системой. Эта работа была достаточно интересной.\nЯ все также продолжаю осваивать Python на курсе математического моделирования и делать лабораторные по этому предмету.\nЧуть-чуть о хорошем. Активный отдых на улице, особенно когда там есть погода, замечательная вещь. Не стоит о нем забывать. Особенно если с компанией. Особенно если любимое дело.\nВывод\nТаким образом, на прошедшей неделе я ознакомилась с новым текстовым редактором, написала несколько небольших командных файлов, продолжила программировать на Python и не забыла хорошенько отдохнуть.\n","date":1652818646,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652818646,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://parfenovaee.github.io/ru/post/week3/","publishdate":"2022-05-17T23:17:26+03:00","relpermalink":"/ru/post/week3/","section":"post","summary":"Прошедшая неделя была продуктивной. Я снова сделала несколько лабораторных работ, две из которых стабильно были по Операционным системам. Это были Лабораторные работы №9 и №10. Немного расскажу о них.\nЛабораторная работа №9","tags":["Academic","开源"],"title":"Моя 3 неделя","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\n Отчет и его структура Составляющие отчета Правила оформления скриншотов  Отчет и его структура\nОтчет — сообщение, доклад о своих действиях, работе.\nОтчет обязательно должен содержать:\n титульный лист цель работы задание ход работы вывод  В зависимости от специфики отчета он может также содержать теоретическое введение, ответ на контрольные вопросы\nОтчет может быть выполнен в любом текстовом редакторе, который вам доступен. Например, классический Word или LibreOffice. Я в настоящее время выполняю отчеты в редакторе на языке разметки Markdown, поэтому это тоже вполне возможно. Главное — понимать цели.\nСоставляющие отчета\nТитульный лист. Должен содержать информацию о названии работы, по которой пишется отчет, и о человеке, выполнившем эту работу.\nЦель работы. В этом разделе, очевидно, расписывается цель (или цели) работы, которых планировалось достигнуть.\nЗадание. Под этим подзаголовком пишется задание, которое было необходимо выполнить. Как вариант, задание пишется в ходе работы рядом с каждым из номеров.\nХод работы. Это основной раздел отчета. В нем поэтапно расписывается каждый шаг, выполняемый в процессе работы. К каждому из выделенных шагов прикрепляется скриншот, который наглядно показывает и доказывает выполнение работы. Также этот раздел может содержать и другие элементы, исходя опять же из специфики отчета. Например, листинги программ, схемы цепей вставки из статей и так далее.\nВывод. Этот раздел завершает отчет и содержит в себе результат выполняемой работы. Обычно вывод совпадает с целями работы.\nПравила оформления скриншотов\nВажно знать, как правильно прилагать скриншот к отчету. Это нельзя сделать бездумно, просто вставив картинку в документ.\nВ первую очередь необходимо в тексте отчета указать ссылку на нужный рисунок, то есть подписать его номер рядом с нужным предложением. После необходимо вставить сам скриншот и обязательно пописать его. Подпись включает в себя номер рисунка (был указан ранее) и его название, соответствующее происходящему.\nЗаключение\nВ этой статье мы познакомились с понятием «отчет», его структурой и правилами оформления.\n","date":1652818327,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652818327,"objectID":"677b480c0a60831b4e4ce258e50b5ccc","permalink":"https://parfenovaee.github.io/ru/post/report/","publishdate":"2022-05-17T23:12:07+03:00","relpermalink":"/ru/post/report/","section":"post","summary":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\n Отчет и его структура Составляющие отчета Правила оформления скриншотов  Отчет и его структура","tags":["Academic","开源"],"title":"Офрмление отчета","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Введение\nВ этой статье вы узнаете краткую информацию о легковесном языке разметки Markdown.\nСодержание:\n  Что такое Markdown и как он появился?\n  Причины использовать Markdown\n  Синтаксис Markdown\n  Что такое Markdown и как он появился?\nMarkdown — облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций. (Например, HTML) Первоначально создан Джоном Грубером и Аароном Шварцем в 2004 году, целью которых являлось создание максимально удобочитаемого и удобного в публикации облегчённого языка разметки. Первой реализацией Markdown стала написанная Грубером реализация на Perl, однако спустя некоторое время появилось множество реализаций от сторонних разработчиков\nПричины использовать Markdown\n  Простое оформление текста без изысков быстрая подгтовка материал к публикации без сложной вёрстки.\n  Создание блога или сайта, где будут размещаться тексты с лаконичным дизайном.\n  Красивые сообщения в WhatsApp или Telegram.\n  Написание документации к своему проекту на GitHub Все эти случаи объединяет одно — сделать минимальную вёрстку текста так, чтобы он выглядел опрятно и чтобы его можно было прочитать без специальных программ.\n  Синтаксис Markdown\nВ этом разделе приведено небольшое руководство по использованию Markdown, однако здесь рассматриваются далеко не все примеры.\nЗаголовки оформляются с помощью решетки. У них есть пять уровней (пять размеров). Одна решетка — первый уровень (самый крупный заголовок); пять решеток — пять уровней (самый маленький заголовок).\nВыделение слов или текста осуществляются с помощью знака звездочка (*).Одна звездочка с каждой стороны выделяемого слова (текста) — курсив; Две звездочки — жирное выделение; три звездочки — жирный курсив.\nЧтобы зачеркнуть текст необходимо поставить возле него две тильды (~).\nНумерованные списки делаются с помощью цифр с точкой, причем цифры не обязательно ставить по прорядку. То есть даже если вы поставите 1, 5, 10, то список в итоге выйдет с цифрами по порядку. Чтобы сделать маркированный список, нужно поставить тире. Внутренние списки оформляются с помощью двух «Tab».\nБлоки цитирования создаются с помощью символа „\u0026gt;“.\nЧтобы вставить ссылку необходим вот такой синтаксис:\n[текст гиперссылки](URL-адреса или имени файла, на который дается ссылка)\nРисунок можно вставить подобным образом, только нужно поставить восклицательный знак:\n![Название рисунка](ссылка на изображение)\nЗаключение\nЛекговесный язык разметки Markdown очень удобен, если пользователю необходимо в короткие сроки оформить текст в лаконичном стиле. Его синтаксис очень прост и много времени на его изучение не понадобится\n","date":1652356189,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652356189,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://parfenovaee.github.io/ru/post/markdown/","publishdate":"2022-05-12T14:49:49+03:00","relpermalink":"/ru/post/markdown/","section":"post","summary":"Введение\nВ этой статье вы узнаете краткую информацию о легковесном языке разметки Markdown.\nСодержание:\n  Что такое Markdown и как он появился?\n  Причины использовать Markdown\n  Синтаксис Markdown","tags":["Academic","开源"],"title":"Язык разметки Markdown","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Я не заметила, как прошла эта неделя. В этот раз я решила не затягивать со сдачей Лабораторных работ, поэтому начала делать их еще на выходных. В итоге, в настоящий момент, я сделала Лабораторные работы №7 и №8 по Операционным системам и две Лабораторных работы на языке С++. Не могу сказать, что это вызвало у меня большие трудности, однако пришлось поработать. Поговорим немного о Лабораторных работах по Операционным системам.\nЛабораторная работа №7\nЦелью Лабораторной работы было:\n освоение основных возможностей командной оболочки Midnight Commander приобретение навыков практической работы по просмотру каталогов и файлов и манипуляций с ними.  В ходе этой работы я хорошо ознакомилась с Midnight Commander. Изучила его структуру и меню, а также выполнила много операций, используя только управляющие клавиши. Второе задание Лабораторной работы научило меня работать с текстовым редактором mc.\nЛабораторная работа №8\nЦелью Лабораторной работы было:\n познакомиться с операционной системой Linux получить практические навыки работы с редактором vi, установленным по умолчанию практически во всех дистрибутивах.  Эта Лабораторная работа научила меня работать с текстовым редактором vi, познакомила с его основными режимами и способами их использования. Благодаря ней я узнала основные горячие клавиши для выполнения многих операций редактирования.\nВывод\nТаким образом, за прошедшую неделю я познакомилась с командной оболочкой Midnight Commander и с распространенным редактором vi, научилась выполнять различные операции в них. Продолжила развиваться в программировании на С++ и не забыла про отдых.\n","date":1652356140,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652356140,"objectID":"69fbac8aae47c1c3b1b10c9e27fe07a3","permalink":"https://parfenovaee.github.io/ru/post/%D0%BC%D0%BE%D1%8F-2-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-12T14:49:00+03:00","relpermalink":"/ru/post/%D0%BC%D0%BE%D1%8F-2-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"Я не заметила, как прошла эта неделя. В этот раз я решила не затягивать со сдачей Лабораторных работ, поэтому начала делать их еще на выходных. В итоге, в настоящий момент, я сделала Лабораторные работы №7 и №8 по Операционным системам и две Лабораторных работы на языке С++.","tags":["Academic","开源"],"title":"Моя 2 Неделя","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":" Введение\nЭтот пост познакомит вас с термином «система управления версиями». Вы узнаете о git, принципах его работы и о том, что нужно сделать, чтобы начать с ним работать.\nСодержание\n Что такое система управления версиями Где применяются системы управления версиями Что такое git, и как он работает Работа с Git Критика git  Что такое система управления версиями?\nСистема управления версиями (также используется определение «система контроля версий», от англ. Version Control System, VCS или Revision Control System) — программное обеспечение для облегчения работы с изменяющейся информацией. Система управления версиями позволяет хранить несколько версий одного и того же документа, при необходимости возвращаться к более ранним версиям, определять, кто и когда сделал то или иное изменение, и многое другое.\nГде применяются системы управления версиями?\nТакие системы наиболее широко используются при разработке программного обеспечения для хранения исходных кодов разрабатываемой программы. Однако они могут с успехом применяться и в других областях, в которых ведётся работа с большим количеством непрерывно изменяющихся электронных документов. В частности, системы управления версиями применяются в Системах автоматизированного проектирования, обычно в составе систем управления данными об изделии (PDM). Управление версиями используется в инструментах конфигурационного управления (Software Configuration Management Tools).\nЧто такое git, и как он работает?\nGit — абсолютный лидер по популярности среди современных систем управления версиями. Это развитый проект с активной поддержкой и открытым исходным кодом. Система git была изначально разработана в 2005 году Линусом Торвальдсом — создателем ядра операционной системы Linux. Git применяется для управления версиями в рамках колоссального количества проектов по разработке ПО, как коммерческих, так и с открытым исходным кодом. Система используется множеством профессиональных разработчиков программного обеспечения. Она превосходно работает под управлением различных операционных систем и может применяться со множеством интегрированных сред разработки (IDE). Контроль версий позволяет вам посмотреть изменения на любом этапе разработки, а также вернуться к любому моменту. Но это не совсем так. Изменения сохраняются в виде коммитов. По-русски - фиксация. Вы делаете начальный коммит, чтобы сохранить начальное состояние проекта, а затем для каждого изменения. Это работает как снимки состояния.\nКроме того, git позволяет отправлять данные на удаленный сервер. Отправляются не только готовая версия, но и все снимки, таким образом, любой человек из команды может посмотреть историю изменений. К каждому снимку нужно делать комментарий, так работа с git будет проще и понятнее.\nРазработка в git ориентирована на обеспечение высокой производительности, безопасности и гибкости распределенной системы.\nРабота с git\nЧтобы начать работать с git, нужно сделать некоторые действия. Сначала пользователь должен создать учетную запись на GitHub. Затем через терминал необходимо установить и настроить некоторые функции и параметры, которые могут понадобиться. Следующим шагом является создание удаленного репозитория (или его клонирование) и подключение к нему системы. В принципе, git готов к работе. Нужные файлы можно локально (в системе) переносить в нужные директории и прописывать команды, которые согласуют локальный репозиторий. Команды: - git add . - сохранение изменений текущего каталога; -git commut — пояснение к изменениям; - git push — отправка в центральный репозиторий. Есть еще одна команда, которую лучше выполнять перед предыдущими тремя. Это команда git pull, которая загружает изменения, внесенные кем-то другим (или с другой системы).\nЗаключение\nGit нередко критикуют за сложность освоения: одни термины могут быть незнакомы новичкам, а другие — иметь иное значение. Тем не менее git — очень мощная система, предлагающая пользователям широкие возможности. Их изучение займет какое‑то время, однако усвоенные навыки помогут участникам команды работать намного быстрее.\n","date":1651856131,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651856131,"objectID":"b51c39c0ac0ec5a38bb139cda30bb055","permalink":"https://parfenovaee.github.io/ru/post/git/","publishdate":"2022-05-06T19:55:31+03:00","relpermalink":"/ru/post/git/","section":"post","summary":"Введение\nЭтот пост познакомит вас с термином «система управления версиями». Вы узнаете о git, принципах его работы и о том, что нужно сделать, чтобы начать с ним работать.\nСодержание","tags":["Academic","开源"],"title":"Управление версиями. Git","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":" Моя неделя была насыщенной и продуктивной. Помимо удовлетворения личных интересов в целом я сделала четыре лабораторные работы, две из которых были по Операционным системам. Это были Лабораторные работы №5 и №6\nЛабораторная работа №5\nЛабораторная работа называлась «Анализ файловой системы Linux. Команды для работы с файлами и каталогами».\nЕе целью было:\n ознакомление с файловой системой Linux, её структурой, именами и содержанием каталогов. приобретение практических навыков по применению команд для работы с файлами и каталогами, по управлению процессами (и работами), по проверке использования диска и обслуживанию файловой системы.  В ходе этой работы я подробно изучила команды сp и mv, вспомнила команды cat, touch,mkdir. Прочла о том, что такое права доступа и научилась изменять с помощью команды chmod. Воспользовавшись командой man, узнала подробнее о командах термнала.\nЛабораторная работа №6\nТема следующей Лабораторной работы была «Поиск файлов. Перенаправление ввода-вывода. Просмотр запущенных процессов»\nЦель работы: ознакомление с инструментами поиска файлов и фильтрации текстовых данных. Приобретение практических навыков: по управлению процессами (и заданиями), по проверке использования диска и обслуживанию файловых систем.\nЛабораторная работа позволила узнать мне о потоках ввода-вывода и научила обращаться с ними (например, перенаправлять стандартный поток вывода (ls) в нужный мне файл). Также я изучила работу команд find и grep, научилась запускать фоновые процессы, получать о них информацию и устранять их командой kill.\nТакже на прошедшей неделе я продолжила осваивать язык программирования C++ и начала изучать новый, с которым никогда до этого не работала — Python.\nТаким образом, за прошедшую неделю я изучила различные команды терминала Linux, которые позволяют работать с файлами, и продолжила развиваться в программировании.\n","date":1651855786,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651855786,"objectID":"d087a750756be4d27c1237ab5e18641a","permalink":"https://parfenovaee.github.io/ru/post/%D0%BC%D0%BE%D1%8F-1-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","publishdate":"2022-05-06T19:49:46+03:00","relpermalink":"/ru/post/%D0%BC%D0%BE%D1%8F-1-%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F/","section":"post","summary":"Моя неделя была насыщенной и продуктивной. Помимо удовлетворения личных интересов в целом я сделала четыре лабораторные работы, две из которых были по Операционным системам. Это были Лабораторные работы №5 и №6","tags":["Academic","开源"],"title":"Моя 1 Неделя","type":"post"},{"authors":["Парфенова Елизавета","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://parfenovaee.github.io/ru/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/ru/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://parfenovaee.github.io/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Парфенова Елизавета","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://parfenovaee.github.io/ru/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]